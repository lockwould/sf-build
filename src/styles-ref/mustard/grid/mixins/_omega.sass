=omega($query: block, $direction: default)
  $table: belongs-to(table, $query)
  $auto: belongs-to(auto, $query)

  @if $direction != default
    +-neat-warn("The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.")
  @else
    $direction: get-direction($layout-direction, $default-layout-direction)

  @if $table
    +-neat-warn("The omega mixin no longer removes padding in table layouts.")

  @if length($query) == 1
    @if $auto
      &:last-child
        margin-#{$direction}: 0
    @else if contains-display-value($query) and $table == false
      margin-#{$direction}: 0
    @else
      +nth-child($query, $direction)
  @else if length($query) == 2
    @if $auto
      &:last-child
        margin-#{$direction}: 0
    @else
      +nth-child(nth($query, 1), $direction)
  @else
    +-neat-warn("Too many arguments passed to the omega() mixin.")

=nth-child($query, $direction)
  $opposite-direction: get-opposite-direction($direction)

  &:nth-child(#{$query})
    margin-#{$direction}: 0

  @if type-of($query) == string
    $query: str-replace($query, " ", "")
    $operator: false

    @if str_index($query, "+")
      $operator: "+"
    @else if str_index($query, "-")
      $operator: "-"

    @if $operator
      $operator-index: str_index($query, $operator)
      $first: str-slice($query, 0, $operator-index - 1)
      $last: to-number(str-slice($query, $operator-index + 1, -1))

      @if $operator == "+"
        $last: $last + 1
      @else if $operator == "-"
        $last: $last - 1

      $nth: "#{$first}#{$operator}#{$last}"

      &:nth-child(#{$nth})
        clear: $opposite-direction
  @else if (type-of($query) == number) & & (unit($query) == "n")
    &:nth-child(#{$query}+1)
      clear: $opposite-direction
